% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TidyProject.R
\docType{package}
\name{TidyProject}
\alias{TidyProject}
\alias{TidyProject-package}
\title{Project and code management}
\description{
TidyProject is designed to manage directories and aid in readability and reproducibility
}
\section{Strategy}{


\itemize{
 \item Code management
 \itemize{
  \item{Project structure: Defines standardised directory structure for NONMEM projects}
  \item{Code: Automates and enforces standards on control comments
  \itemize{
   \item Beginning of code: Description, author, date,...
   \item $THETA/$OMEGA/$SIGMA: Parameter names, units, transformations)}
  }
  \item{Long term reproducibility: Local (project level) installation of packages}
  \item{Code sharing/reuse: editable model library + search functionality}
 }
}

Compatible with git - optional
#'
}

\section{Options}{

\code{scripts.dir} = names of the "scripts" directory in the project

\code{models.dir} = names of the "models" directory in the project

\code{git.exists} = \code{TRUE} if git is installed (only works on unix currently)
}
\examples{
\dontrun{
new_project("~/AZDXXXX/PKAE1")          ## creates new_project
code_library()                          ## display summary of code_library
copy_script("nm.log.R")                 ## copy_script from code_library to project
preview("nm.log.R")                     ## preview file in code_library

copy_control("ADVAN2.mod","run1.mod")   ## copy template from code_library
copy_control("run1.mod","run2.mod")     ## create run2.mod from run1.mod
new_script("test.R")                    ## Creates empty test.R
copy_script("output.data.R")            ## copies from code_library
copy_script("../pathto/script.R")       ## copies from other location
}
}

